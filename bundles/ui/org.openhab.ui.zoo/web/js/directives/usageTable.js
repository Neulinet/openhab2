// Generated by CoffeeScript 1.9.2
'use strict';
angular.module('ZooLib.directives.usageTable', []).directive('usageTable', function(itemService, influxDb, $q, $log) {
  return {
    restrict: 'E',
    replace: true,
    templateUrl: 'partials/directives/usageTable.html',
    link: function(scope, elem, attr) {
      var activePowerItems, addZ, consumptionItems, getMonday, queries, queryDiff, rearrangeConsumptionData;
      consumptionItems = $q.defer();
      itemService.getByName({
        itemName: 'gConsumptions'
      }, function(data) {
        return consumptionItems.resolve({
          globalConsumption: data.state,
          rooms: data.members
        });
      });
      activePowerItems = $q.defer();
      itemService.getByName({
        itemName: 'gPower'
      }, function(data) {
        return activePowerItems.resolve({
          globalPower: data.state,
          rooms: data.members
        });
      });
      addZ = function(n) {
        if (n < 10) {
          return '0' + n;
        } else {
          return '' + n;
        }
      };
      getMonday = function(date) {
        var day;
        day = date.getDay() || 7;
        if (day !== 1) {
          date.setHours(-24 * (day - 1));
        }
        return date;
      };
      queryDiff = function(mode) {
        var d, date, m, y;
        if (mode == null) {
          mode = 'd';
        }
        date = new Date();
        date.setHours(0, 0, 0, 0);
        switch (mode) {
          case 'w':
            getMonday(date);
            break;
          case 'm':
            date.setDate(1);
        }
        y = date.getFullYear();
        m = addZ(date.getMonth() + 1);
        d = addZ(date.getDate());
        return influxDb.query({
          query: "select difference(value) as diff from /^consum/i where time > '" + y + "-" + m + "-" + d + "'"
        }, function(data) {});
      };
      queries = $q.all({
        day: queryDiff('d').$promise,
        week: queryDiff('w').$promise,
        month: queryDiff('m').$promise,
        items: consumptionItems.promise,
        power: activePowerItems.promise
      });
      queries.then(function(data) {
        var lut;
        scope.data = data.items;
        lut = rearrangeConsumptionData(data);
        return data.items.rooms.forEach(function(room) {
          var ref;
          room.currentPower = 0;
          room.consumptionDay = room.consumptionWeek = room.consumptionMonth = 0;
          return (ref = room.members) != null ? ref.forEach(function(roomMember) {
            var d, m, w;
            d = Math.abs(lut.day[roomMember.name] || 0);
            w = Math.abs(lut.week[roomMember.name] || 0);
            m = Math.abs(lut.month[roomMember.name] || 0);
            room.consumptionDay += d;
            room.consumptionWeek += w;
            room.consumptionMonth += m;
            room.cost = room.consumptionMonth * .3;
          }) : void 0;
        });
      });
      return rearrangeConsumptionData = function(data) {
        var day, month, week;
        day = {};
        week = {};
        month = {};
        data.day.forEach(function(entry) {
          return day[entry.name] = entry.points[0][1];
        });
        data.week.forEach(function(entry) {
          return week[entry.name] = entry.points[0][1];
        });
        data.month.forEach(function(entry) {
          return month[entry.name] = entry.points[0][1];
        });
        return {
          day: day,
          week: week,
          month: month
        };
      };
    }
  };
});
